/**
 * This file auto-generated by Fern from our API Definition.
 */

import { PatchApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const CreateFlightEstimateRequest: core.schemas.ObjectSchema<
  CreateFlightEstimateRequest.Raw,
  PatchApi.estimates.CreateFlightEstimateRequest
> = core.schemas.object({
  distanceM: core.schemas.property("distance_m", core.schemas.number().optional()),
  originAirport: core.schemas.property("origin_airport", core.schemas.string().optional()),
  destinationAirport: core.schemas.property("destination_airport", core.schemas.string().optional()),
  aircraftCode: core.schemas.property("aircraft_code", core.schemas.string().optional()),
  cabinClass: core.schemas.property("cabin_class", core.schemas.lazy(() => schemas.estimates.CabinClass).optional()),
  passengerCount: core.schemas.property("passenger_count", core.schemas.number().optional()),
  projectId: core.schemas.property("project_id", core.schemas.string().optional()),
  createOrder: core.schemas.property("create_order", core.schemas.boolean().optional()),
});

export declare namespace CreateFlightEstimateRequest {
  interface Raw {
    distance_m?: number | null;
    origin_airport?: string | null;
    destination_airport?: string | null;
    aircraft_code?: string | null;
    cabin_class?: schemas.estimates.CabinClass.Raw | null;
    passenger_count?: number | null;
    project_id?: string | null;
    create_order?: boolean | null;
  }
}
